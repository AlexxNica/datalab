# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bytestream.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bytestream.proto',
  package='google.bytestream',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x62ytestream.proto\x12\x11google.bytestream\"M\n\x0bReadRequest\x12\x15\n\rresource_name\x18\x01 \x01(\t\x12\x13\n\x0bread_offset\x18\x02 \x01(\x03\x12\x12\n\nread_limit\x18\x03 \x01(\x03\" \n\x0cReadResponse\x12\x10\n\x04\x64\x61ta\x18\n \x01(\x0c\x42\x02\x08\x01\"c\n\x0cWriteRequest\x12\x15\n\rresource_name\x18\x01 \x01(\t\x12\x14\n\x0cwrite_offset\x18\x02 \x01(\x03\x12\x14\n\x0c\x66inish_write\x18\x03 \x01(\x08\x12\x10\n\x04\x64\x61ta\x18\n \x01(\x0c\x42\x02\x08\x01\"\'\n\rWriteResponse\x12\x16\n\x0e\x63ommitted_size\x18\x01 \x01(\x03\"0\n\x17QueryWriteStatusRequest\x12\x15\n\rresource_name\x18\x01 \x01(\t\"D\n\x18QueryWriteStatusResponse\x12\x16\n\x0e\x63ommitted_size\x18\x01 \x01(\x03\x12\x10\n\x08\x63omplete\x18\x02 \x01(\x08\x32\x98\x02\n\nByteStream\x12K\n\x04Read\x12\x1e.google.bytestream.ReadRequest\x1a\x1f.google.bytestream.ReadResponse\"\x00\x30\x01\x12N\n\x05Write\x12\x1f.google.bytestream.WriteRequest\x1a .google.bytestream.WriteResponse\"\x00(\x01\x12m\n\x10QueryWriteStatus\x12*.google.bytestream.QueryWriteStatusRequest\x1a+.google.bytestream.QueryWriteStatusResponse\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_READREQUEST = _descriptor.Descriptor(
  name='ReadRequest',
  full_name='google.bytestream.ReadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_name', full_name='google.bytestream.ReadRequest.resource_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='read_offset', full_name='google.bytestream.ReadRequest.read_offset', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='read_limit', full_name='google.bytestream.ReadRequest.read_limit', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=116,
)


_READRESPONSE = _descriptor.Descriptor(
  name='ReadResponse',
  full_name='google.bytestream.ReadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='google.bytestream.ReadResponse.data', index=0,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\010\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=150,
)


_WRITEREQUEST = _descriptor.Descriptor(
  name='WriteRequest',
  full_name='google.bytestream.WriteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_name', full_name='google.bytestream.WriteRequest.resource_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='write_offset', full_name='google.bytestream.WriteRequest.write_offset', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finish_write', full_name='google.bytestream.WriteRequest.finish_write', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='google.bytestream.WriteRequest.data', index=3,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\010\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=251,
)


_WRITERESPONSE = _descriptor.Descriptor(
  name='WriteResponse',
  full_name='google.bytestream.WriteResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='committed_size', full_name='google.bytestream.WriteResponse.committed_size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=292,
)


_QUERYWRITESTATUSREQUEST = _descriptor.Descriptor(
  name='QueryWriteStatusRequest',
  full_name='google.bytestream.QueryWriteStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_name', full_name='google.bytestream.QueryWriteStatusRequest.resource_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=294,
  serialized_end=342,
)


_QUERYWRITESTATUSRESPONSE = _descriptor.Descriptor(
  name='QueryWriteStatusResponse',
  full_name='google.bytestream.QueryWriteStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='committed_size', full_name='google.bytestream.QueryWriteStatusResponse.committed_size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='complete', full_name='google.bytestream.QueryWriteStatusResponse.complete', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=344,
  serialized_end=412,
)

DESCRIPTOR.message_types_by_name['ReadRequest'] = _READREQUEST
DESCRIPTOR.message_types_by_name['ReadResponse'] = _READRESPONSE
DESCRIPTOR.message_types_by_name['WriteRequest'] = _WRITEREQUEST
DESCRIPTOR.message_types_by_name['WriteResponse'] = _WRITERESPONSE
DESCRIPTOR.message_types_by_name['QueryWriteStatusRequest'] = _QUERYWRITESTATUSREQUEST
DESCRIPTOR.message_types_by_name['QueryWriteStatusResponse'] = _QUERYWRITESTATUSRESPONSE

ReadRequest = _reflection.GeneratedProtocolMessageType('ReadRequest', (_message.Message,), dict(
  DESCRIPTOR = _READREQUEST,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.ReadRequest)
  ))
_sym_db.RegisterMessage(ReadRequest)

ReadResponse = _reflection.GeneratedProtocolMessageType('ReadResponse', (_message.Message,), dict(
  DESCRIPTOR = _READRESPONSE,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.ReadResponse)
  ))
_sym_db.RegisterMessage(ReadResponse)

WriteRequest = _reflection.GeneratedProtocolMessageType('WriteRequest', (_message.Message,), dict(
  DESCRIPTOR = _WRITEREQUEST,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.WriteRequest)
  ))
_sym_db.RegisterMessage(WriteRequest)

WriteResponse = _reflection.GeneratedProtocolMessageType('WriteResponse', (_message.Message,), dict(
  DESCRIPTOR = _WRITERESPONSE,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.WriteResponse)
  ))
_sym_db.RegisterMessage(WriteResponse)

QueryWriteStatusRequest = _reflection.GeneratedProtocolMessageType('QueryWriteStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _QUERYWRITESTATUSREQUEST,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusRequest)
  ))
_sym_db.RegisterMessage(QueryWriteStatusRequest)

QueryWriteStatusResponse = _reflection.GeneratedProtocolMessageType('QueryWriteStatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUERYWRITESTATUSRESPONSE,
  __module__ = 'bytestream_pb2'
  # @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusResponse)
  ))
_sym_db.RegisterMessage(QueryWriteStatusResponse)


_READRESPONSE.fields_by_name['data'].has_options = True
_READRESPONSE.fields_by_name['data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\010\001'))
_WRITEREQUEST.fields_by_name['data'].has_options = True
_WRITEREQUEST.fields_by_name['data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\010\001'))
import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterByteStreamServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Read(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def Write(self, request_iterator, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def QueryWriteStatus(self, request, context):
    raise NotImplementedError()
class EarlyAdopterByteStreamServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterByteStreamStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Read(self, request):
    raise NotImplementedError()
  Read.async = None
  @abc.abstractmethod
  def Write(self, request_iterator):
    raise NotImplementedError()
  Write.async = None
  @abc.abstractmethod
  def QueryWriteStatus(self, request):
    raise NotImplementedError()
  QueryWriteStatus.async = None
def early_adopter_create_ByteStream_server(servicer, port, private_key=None, certificate_chain=None):
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  method_service_descriptions = {
    "QueryWriteStatus": alpha_utilities.unary_unary_service_description(
      servicer.QueryWriteStatus,
      bytestream_pb2.QueryWriteStatusRequest.FromString,
      bytestream_pb2.QueryWriteStatusResponse.SerializeToString,
    ),
    "Read": alpha_utilities.unary_stream_service_description(
      servicer.Read,
      bytestream_pb2.ReadRequest.FromString,
      bytestream_pb2.ReadResponse.SerializeToString,
    ),
    "Write": alpha_utilities.stream_unary_service_description(
      servicer.Write,
      bytestream_pb2.WriteRequest.FromString,
      bytestream_pb2.WriteResponse.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("google.bytestream.ByteStream", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_ByteStream_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  method_invocation_descriptions = {
    "QueryWriteStatus": alpha_utilities.unary_unary_invocation_description(
      bytestream_pb2.QueryWriteStatusRequest.SerializeToString,
      bytestream_pb2.QueryWriteStatusResponse.FromString,
    ),
    "Read": alpha_utilities.unary_stream_invocation_description(
      bytestream_pb2.ReadRequest.SerializeToString,
      bytestream_pb2.ReadResponse.FromString,
    ),
    "Write": alpha_utilities.stream_unary_invocation_description(
      bytestream_pb2.WriteRequest.SerializeToString,
      bytestream_pb2.WriteResponse.FromString,
    ),
  }
  return early_adopter_implementations.stub("google.bytestream.ByteStream", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaByteStreamServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Read(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def Write(self, request_iterator, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def QueryWriteStatus(self, request, context):
    raise NotImplementedError()

class BetaByteStreamStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Read(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def Write(self, request_iterator, timeout):
    raise NotImplementedError()
  Write.future = None
  @abc.abstractmethod
  def QueryWriteStatus(self, request, timeout):
    raise NotImplementedError()
  QueryWriteStatus.future = None

def beta_create_ByteStream_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  request_deserializers = {
    ('google.bytestream.ByteStream', 'QueryWriteStatus'): bytestream_pb2.QueryWriteStatusRequest.FromString,
    ('google.bytestream.ByteStream', 'Read'): bytestream_pb2.ReadRequest.FromString,
    ('google.bytestream.ByteStream', 'Write'): bytestream_pb2.WriteRequest.FromString,
  }
  response_serializers = {
    ('google.bytestream.ByteStream', 'QueryWriteStatus'): bytestream_pb2.QueryWriteStatusResponse.SerializeToString,
    ('google.bytestream.ByteStream', 'Read'): bytestream_pb2.ReadResponse.SerializeToString,
    ('google.bytestream.ByteStream', 'Write'): bytestream_pb2.WriteResponse.SerializeToString,
  }
  method_implementations = {
    ('google.bytestream.ByteStream', 'QueryWriteStatus'): face_utilities.unary_unary_inline(servicer.QueryWriteStatus),
    ('google.bytestream.ByteStream', 'Read'): face_utilities.unary_stream_inline(servicer.Read),
    ('google.bytestream.ByteStream', 'Write'): face_utilities.stream_unary_inline(servicer.Write),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_ByteStream_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  import bytestream_pb2
  request_serializers = {
    ('google.bytestream.ByteStream', 'QueryWriteStatus'): bytestream_pb2.QueryWriteStatusRequest.SerializeToString,
    ('google.bytestream.ByteStream', 'Read'): bytestream_pb2.ReadRequest.SerializeToString,
    ('google.bytestream.ByteStream', 'Write'): bytestream_pb2.WriteRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.bytestream.ByteStream', 'QueryWriteStatus'): bytestream_pb2.QueryWriteStatusResponse.FromString,
    ('google.bytestream.ByteStream', 'Read'): bytestream_pb2.ReadResponse.FromString,
    ('google.bytestream.ByteStream', 'Write'): bytestream_pb2.WriteResponse.FromString,
  }
  cardinalities = {
    'QueryWriteStatus': cardinality.Cardinality.UNARY_UNARY,
    'Read': cardinality.Cardinality.UNARY_STREAM,
    'Write': cardinality.Cardinality.STREAM_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.bytestream.ByteStream', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
