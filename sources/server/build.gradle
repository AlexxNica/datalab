/*
 * Copyright 2014 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

/**
 * Copy all UI files (except the TypeScript files) to the server's static content (build) directory
 */
task copyStaticUi(type: Copy) {
    from './src/ui'
    into  new File(project.buildDir, '/node/static')
    exclude '**/*.ts'
}
/**
 * Compile the UI application code and output to the server's static content (build) directory
 */
task tscUi(type: TypeScriptCompileTask) {
    srcDir = 'server/src'
    srcRelativePaths = ['/ui/scripts/']
    outputRelativePath = '/node/static/scripts'
    moduleType = 'amd'
}

/**
 * Copy over any static files for the NodeJS server
 */
task copyStaticNode(type: Copy) {
    from './src/node'
    into new File(project.buildDir, '/node')
    exclude '**/*.ts'
}
/**
 * Compile the NodeJS modules into CommonJS modules
 */
task tscNode(type: TypeScriptCompileTask) {
    srcDir = 'server/src'
    srcRelativePaths = ['/node/']
    outputRelativePath = '/node/'
    moduleType = 'commonjs'
}

/**
 * Copy files shared between the server/client into the respective source trees.
 *
 * TODO(bryantd): hopefully it's possible to do something more elegant with the tsc compiler
 * Issue is that the shared filepaths referenced by files on the client will differ
 * between build and runtime.
 *
 * At build time file src/ui/scripts/app/foo.ts needs to import shared file src/shared/bar.ts
 * by specifying the correct relative path from foo.ts to bar.ts as ../../../shared/bar.ts
 *
 * However, at runtime, this relative path will not work because the given path is outside of the
 * requirejs file serving scope. For example at runtime the (amd) path to the shared file would
 * ideally be 'shared/bar', with 'shared/' configured as a path in the requirejs config (main.ts)
 *
 * Hopefully there's a simple fix for this issue that avoids having to cp the shared files into
 * the source trees. This is a stopgap solution that circumvents the issue.
 *
 */
task embedSharedFilesNode(type: Copy) {
    from './src/shared'
    into './src/node/app/shared'
}
task embedSharedFilesUi(type: Copy) {
    from './src/shared'
    into './src/ui/scripts/app/shared'
}

task('buildNode') {
    dependsOn 'copyStaticNode', 'embedSharedFilesNode', 'tscNode'
}

// TODO(bryantd): Add support for JavaScript compilation/minification of the UI js
// TODO(bryantd): Add tasks for concatenating file sets for both Node and UI
task('buildUi') {
    dependsOn 'copyStaticUi', 'embedSharedFilesUi', 'tscUi'
}

/**
 * Execute all of the tasks necessary to build the DataLab server
 */
task('build') {
    dependsOn 'buildNode', 'buildUi'
}
